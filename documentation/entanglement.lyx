#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass book
\begin_preamble
\lstset{ %
basicstyle=\footnotesize,       % the size of the fonts
numbers=left,                   % position line-numbers
numberstyle=\footnotesize,      % the size of the line-number fonts
stepnumber=1,                   % If it's 1, each line will be numbered
numbersep=5pt,                  % distance between line-numbers and code
showspaces=false,               % show spaces adding particular underscores
showstringspaces=false,         % underline spaces within strings
showtabs=false,                 % show tabs within strings adding particular underscores
frame=single,                   % adds a frame around the code
tabsize=2,                      % sets default tabsize to 2 spaces
captionpos=b,                   % sets the caption-position to bottom
breaklines=true,                % sets automatic line breaking
breakatwhitespace=false,        % sets if automatic breaks should only happen at whitespace
title=\lstname,                 % show the filename of files included with \lstinputlisting;
}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1.5cm
\topmargin 2cm
\rightmargin 1.5cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\listings_params "breaklines=true,keepspaces=true,tabsize=4"
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Entanglement
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Part
\begin_inset CommandInset label
LatexCommand label
name "part:Graphs-and-data"

\end_inset

Graphs and data integration
\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Standard
This document is an instruction manual for Entanglement (
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.entanglementgraph.com
\end_layout

\end_inset

), a high-performance graph database, built on top of MongoDB
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.mongodb.org/
\end_layout

\end_inset


\end_layout

\end_inset

.
 Entanglement is designed from the ground-up to facillitate the creation,
 manipulation and querying of large graphs -- we currently define `large'
 as being in the region of hundreds of millions of nodes and edges.
 Entanglement is primarilly intended for developers who need a programatic
 means of creating, manipulating and querying extremely large graphs.
 However, there is growing support for graph visualisation and browsing,
 akin to desktop data integration systems such as Ondex
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.ondex.org/
\end_layout

\end_inset


\end_layout

\end_inset

 and Gephi
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://gephi.org/
\end_layout

\end_inset


\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard
The structure of this document is as follows:
\end_layout

\begin_layout Itemize
The first part, 
\begin_inset CommandInset ref
LatexCommand nameref
reference "part:Graphs-and-data"

\end_inset

, contains an introduction to graphs and data integration.
 
\end_layout

\begin_layout Itemize
Then, in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "part:User-DocumentationFirst-steps"

\end_inset

 - 
\begin_inset CommandInset ref
LatexCommand nameref
reference "part:User-DocumentationFirst-steps"

\end_inset

 
\begin_inset CommandInset ref
LatexCommand vpageref
reference "part:User-DocumentationFirst-steps"

\end_inset

, we describe how to install Entanglement.
 A number of example programs programs are provided that show how to connect
 to a database and perform a number of common data intregrations tasks such
 as imorting and exporting data.
\end_layout

\begin_layout Itemize
\begin_inset CommandInset ref
LatexCommand formatted
reference "part:Entanglement-User-Intefaces"

\end_inset

 - 
\begin_inset CommandInset ref
LatexCommand nameref
reference "part:Entanglement-User-Intefaces"

\end_inset


\begin_inset CommandInset ref
LatexCommand vpageref
reference "part:Entanglement-User-Intefaces"

\end_inset

, introduces the Entanglement user interface.
 In this section, we describe how graphs can be edited and queried in a
 distributed, collaborative way by several people or software agents simultaneou
sly.
 You will also learn how to simultaneously construct different automatically
 updating views over the same dataset.
\end_layout

\begin_layout Itemize
\begin_inset CommandInset ref
LatexCommand formatted
reference "part:Design-patterns-for"

\end_inset

 - 
\begin_inset CommandInset ref
LatexCommand nameref
reference "part:Design-patterns-for"

\end_inset

 
\begin_inset CommandInset ref
LatexCommand vpageref
reference "part:Design-patterns-for"

\end_inset

, contains information about how to build large graphs in practise by making
 the most of parallelism and data isolation.
\end_layout

\begin_layout Chapter
Graphs
\end_layout

\begin_layout Standard
Graphs represent information as a set of nodes, edges and properties.
\end_layout

\begin_layout Chapter
Data Integration
\end_layout

\begin_layout Part
\begin_inset CommandInset label
LatexCommand label
name "part:User-DocumentationFirst-steps"

\end_inset

First steps in Entanglement
\end_layout

\begin_layout Chapter
Installing Entanglement
\end_layout

\begin_layout Standard
This chapter explains how to install the Entanglement dependencies, as well
 as a suitable development environment.
 This documentation assumes the underlying operation system is a 64-bit
 installation of Ubuntu 13.04 -- you may need to adjust commands accordingly
 if you are using a different system.
\end_layout

\begin_layout Section
System requirements
\end_layout

\begin_layout Standard
You will require the following software:
\end_layout

\begin_layout Itemize
MongoDB
\end_layout

\begin_layout Itemize
An IRC server
\end_layout

\begin_layout Itemize
Java 7
\end_layout

\begin_layout Itemize
Maven
\end_layout

\begin_layout Itemize
An IDE for development.
 For the purposes of this documentation, we assume the Community Edition
 of IntelliJ: 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.jetbrains.com/idea/download/
\end_layout

\end_inset


\end_layout

\begin_layout Section
Installing Entanglement dependencies
\end_layout

\begin_layout Standard
First, install the software components available in the Ubuntu packaging
 system:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

apt-get install openjdk-7-jdk git git-flow maven
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Entanglement uses MongoDB as the underlying storage mechanism.
 You must have an installation of MongoDB in order to proceed.
 MongoDB can be obtained from the following location: 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.mongodb.org/downloads
\end_layout

\end_inset

.
 Download the latest production release appropriate for your operating system.
 Where possible, you should choose the 64-bit version.
 Once downloaded, extract the zip file to your home directory (or elsewhere)
 and start the server the following commands:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

# Install MongoDB
\end_layout

\begin_layout Plain Layout

cd $HOME
\end_layout

\begin_layout Plain Layout

tar zxf ~/Downloads/mongodb-linux-x86_64-2.4.3.tgz
\end_layout

\begin_layout Plain Layout

cd mongodb-linux-x86_64-2.4.3
\end_layout

\begin_layout Plain Layout

mkdir data
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# Start the MongoDB server
\end_layout

\begin_layout Plain Layout

./bin/mongod --dbpath ./data
\end_layout

\end_inset


\end_layout

\begin_layout Standard
After a few moments, MongoDB should start.
 Leave this terminal running in the background.
\end_layout

\begin_layout Section
Installing an IRC server
\end_layout

\begin_layout Standard
The default Entanglement user inteface makes use of IRC as a distributed
 collaborative environement.
 If you don't have one already, you will need to install an IRC server.
 Here, we explain how to install and configure the 'ircd-hybrid' server,
 but any IRC server program should be suitable.
 Importantly, it is necessary to disable the 
\begin_inset Quotes eld
\end_inset

flood protection
\begin_inset Quotes erd
\end_inset

 feature present in many server implementations; Entanglement agents frequently
 post large volumes of information to a chat channel, which may be mis-interpret
ted by some servers as a malicious attempt at flooding the network.
\end_layout

\begin_layout Section
Compiling Entanglement
\end_layout

\begin_layout Standard
First, obtain a clone of the Entanglement source code from BitBucket (replacing
 '
\emph on
yourusername
\emph default
' with your own BitBucket account name):
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

cd $HOME
\end_layout

\begin_layout Plain Layout

git clone https://yourusername@bitbucket.org/keith_f/entanglement.git
\end_layout

\begin_layout Plain Layout

cd entanglement/entanglement
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Next, execute 'git flow init', and accept all the default values by pressing
 'return' to each question:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

git flow init
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Now, compile Entanglement with the following command:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

mvn clean install
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The first time you compile Entanglement, many Maven dependencies will be
 downloaded.
 Subsequent builds should be much faster.
\end_layout

\begin_layout Part
\begin_inset CommandInset label
LatexCommand label
name "part:Entanglement-User-Intefaces"

\end_inset

Entanglement User Intefaces
\end_layout

\begin_layout Chapter
IRC User interface
\end_layout

\begin_layout Standard
We chose an IRC (Internet Rely Chat) inteface as the primary means of interactin
g with Entanglement graphs for a number of reasons.
 IRC is a popular means of communicating with other people and programs
 over the Internet.
 While developing Entanglement, we needed to stike a balance between automation
 (scriptability), interactivity (inspecting and managing long-running tasks)
 and visual feedback (graph GUIs).
 The default Entanglement user interface builds on the distributed nature
 of IRC to provide an extremely versitile graph environment with the following
 features:
\end_layout

\begin_layout Enumerate
Multiple users at different geographical locations can interact with the
 same graphs.
 Users in the same IRC channel can interact and issue commands to one or
 more Entanglement agents.
 Users are kept up-to-date of progress and status messages.
\end_layout

\begin_layout Enumerate
The command-based interface allows scriptability and therefore repeatability.
 Integrated datasets can be composed step-by-step.
\end_layout

\begin_layout Enumerate
Further commands are provided that launch user-local GUI visualisations
 of remote graph entities and operations.
 For example, a GUI running on a local machine can be attached to a remote
 graph cursor.
 When a remote user or automated agent updates the position of the graph
 cursor, the changes are reflected in the local visualisation.
\end_layout

\begin_layout Enumerate
IRC 'channels' provide an intuitive means of segregating workspaces and
 workgroups.
 Separate user groups, graphs and configurations can exist in different
 named channels.
 Altenatively, channels can also be used to provide different integrated
 views over the same datasets.
\end_layout

\begin_layout Section
HOWTOs
\end_layout

\begin_layout Subsection
How to connect to a MongoDB cluster
\end_layout

\begin_layout Standard
Before you can manipulate or query any Entanglement graphs, you must first
 define a database 'cluster' by providing connection details.
 Database cluster definitions in Entanglement are 1:1 with MongoDB replica
 server sets, and can be defined as follows:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

!<your_bot> connect-mongodb-pool pool=my-project-pool hosts=my-mongodb-host.com
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In the above command, we define a connection pool named 'my-project-pool'
 that connects to the MongoDB server 'my-mongodb-host.com'.
 This connection pool can now be used to create graph connections.
\end_layout

\begin_layout Standard
Note that the 'hosts' parameter can take a comma-separated list of hostnames,
 but is used to configure 
\emph on
replica
\emph default
 server sets only.
 If you have a sharded configuration, you do not need to specify shard members
 here.
\end_layout

\begin_layout Subsection
How to create a graph connection
\end_layout

\begin_layout Standard
Once MongoDB cluster information has been registered (see previous section),
 you can create named graph connections.
 Most other Entanglement operations require at least one graph connection
 in order to perform queries or other database operations.
 Here, we define a graph connection '
\emph on
my-connection
\emph default
' that connects to the MongoDB cluster '
\emph on
my-project-pool
\emph default
'.
 The database '
\emph on
my-database
\emph default
' is used, which refers to a MongoDB database stored on the server cluster.
 Within this database, we connect to the graph '
\emph on
my-graph
\emph default
'.
 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

!<your_bot> connect-graph conn=my-connection pool=my-project-pool database=my-da
tabase graph=my-graph
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This connection information is made available to subsequent commands through
 the connection name '
\emph on
my-connection
\emph default
'.
\end_layout

\begin_layout Subsection
How to export an Entanglement graph to Gephi (.gexf) format
\end_layout

\begin_layout Standard
Quite often it is useful to be able to visualise small graphs, or sub-graphs.
 Gephi is able to display approximately 30,000 nodes and edges on modern
 graphics hardware.
 Exporting an Entanglement graph to Gephi format is straightfoward.
 Via the IRC interface, execute the '
\emph on
export-gephi
\emph default
' command, which will either use the current default graph connection, or
 a specified name, as shown:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

!<your_bot> export-gephi conn=<your_connection_name>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
You may also specify custom colour formatting by node type by inserting
 appropriate colour entries into your IRC bot's environement, as follows:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

!<your_bot> prop-set node.color.Chromosome RED
\end_layout

\begin_layout Plain Layout

!<your_bot> prop-set node.color.Gene GREEN
\end_layout

\begin_layout Plain Layout

!<your_bot> prop-set node.color.ProbeType CYAN
\end_layout

\begin_layout Plain Layout

!<your_bot> prop-set node.color.Bristol450kData YELLOW
\end_layout

\begin_layout Plain Layout

!<your_bot> prop-set node.color.Encode450kData ORANGE
\end_layout

\begin_layout Plain Layout

!<your_bot> prop-set node.color.Protein BLUE
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

!<your_bot> export-gephi conn=<your_connection_name>
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Part
\begin_inset CommandInset label
LatexCommand label
name "part:Design-patterns-for"

\end_inset

Design patterns for performant data integration
\end_layout

\begin_layout Chapter
Designing for performance
\end_layout

\begin_layout Standard
Entanglement is designed from the ground-up to facillitate the creation,
 manipulation and querying of large graphs -- we currently define `large'
 as being somewhere in the region of hundreds of millions of nodes and edges.
 Being based on MongoDB allows large graphs to be split over a cluster of
 machines.
 However, building graphs of this size efficiently can be challenging.
 Regardless of how powerful your compute clusters are, an ad-hoc or poorly
 thought-out graph building approach will often result in graphs taking
 much longer to build than necessary.
 Your program's import processes and data structures must be therefore carefully
 designed.
 
\begin_inset CommandInset ref
LatexCommand formatted
reference "part:Design-patterns-for"

\end_inset

 of this instruction manual comprises of a set of graph building design
 patterns.
 Every data integration project is different, and not all patterns may be
 applicable in all cases.
 You may need to experiment with your data in order to decide which approach
 is best, or whether a new approach is needed.
\end_layout

\begin_layout Standard
Before reading each design pattern in detail, bear in mind the following:
\end_layout

\begin_layout Verse

\emph on
Where possible, structure code and data so that data can be imported as
 independent chunks.
 This approach has two advantages: a) if an error occurs, only the chunk
 that fails needs to be repeated; b) if your hardware allows, multiple chunks
 can be imported in parallel without interference.
 
\end_layout

\begin_layout Itemize
Try to perform 'write only' operations.
 Constantly checking whether nodes/edges exist can lead to significant slowdowns.
 Use 'hanging' edges for data imports, particularly for hub nodes such as
 nodes representing genes or chromosomes where many thousands of edges may
 coneect to.
\end_layout

\begin_layout Itemize
Entanglement supports 'hanging' edges.
 Make use of them to split data nodes into different graphs at suitable
 points.
 Hanging edges allow you to perform out-of-order imports, where different
 parts of the same graph can be imported.
 They also facillitate write-only operations by allowing edges to refer
 to nodes that do not (yet) exist.
\end_layout

\begin_layout Itemize
Although software architecutre has a huge influence on performance, the
 properties of the underlying hardware should also be considered.
 One of MongoDB's strengths is its high write performance.
 A cluster of machines, whether part of the same database cluster or working
 independently, has a huge potential for writing data compared to a single
 machine.
 You could write different data sets to databases stored on different physical
 drives to increase performance.
 Entanglement supports multiple individual MongoDB servers, so no complicated
 cluster setup is necessarilly required.
 
\end_layout

\begin_layout Section
Segregating data by dataset
\end_layout

\end_body
\end_document
